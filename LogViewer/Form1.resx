<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        S/wv3znOodIK3VoAAAAASUVORK5CYII=
</value>
  </data>
</root>